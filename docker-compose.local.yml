version: "3.3"
services:
  wi_mysql:
    image: mysql:5.7
    restart: always
    container_name: wi_mysql
    environment:
      MYSQL_USER: "i2g"
      MYSQL_PASSWORD: "qwertyuiop"
      MYSQL_ROOT_PASSWORD: "qwertyuiop"
    ports:
      - "3307:3306"
    expose:
      - "3306"
    volumes:
      - /var/lib/docker-local/mysql:/var/lib/mysql
    networks:
      - i2g
  wi_redis:
    image: redis:latest
    restart: always
    container_name: wi_redis
    ports:
      - "6379:6379"
    expose:
      - "6379"
    networks:
      - i2g
  wi_auth:
    image: hoangthanh751996/wi-auth:latest
    restart: always
    container_name: wi_auth
    environment:
      AUTH_DBNAME: "wi_auth"
      AUTH_DBUSER: "thanh"
      AUTH_DBPASSWORD: "qwertyuiop"
      AUTH_DBHOST: wi_mysql
      AUTH_DBDIALECT: "mysql"
      AUTH_DBPORT: "3306"
      AUTH_DBSTORAGE: "/tmp/wi_backend.sqlite"
    ports:
      - "2999:2999"
    expose:
      - "2999"
    networks:
      - i2g
  wi_online_inventory:
    container_name: wi_online_inventory
    build: ../wi-online-inventory
    image: wi-online-inventory:latest
    restart: always
    environment:
      INVENTORY_DBNAME: "inventory"
      INVENTORY_DBUSER: "thanh"
      INVENTORY_DBPASSWORD: "qwertyuiop"
      INVENTORY_DBHOST: wi_mysql
      INVENTORY_DIALECT: "mysql"
      INVENTORY_DBPORT: "3306"
      NODE_ENV: "production"
      INVENTORY_ACCESS_KEY_ID: "AKIA3PCPNILJKLDENWGZ"
      INVENTORY_SECRET_ACCESS_KEY: "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"
      INVENTORY_S3BUCKET: "wi-thanh-inventory"
      INVENTORY_S3PATH: "https://s3-ap-southeast-1.amazonaws.com/wi-thanh-inventory"
    ports:
      - "3002:80"
    expose:
      - "3002"
    networks:
      - i2g
    volumes:
      - /var/lib/docker-local/uploads:/app/uploads
      - /var/lib/docker-local/exports:/app/exports
  wi_file_browser_backend:
    container_name: wi_file_browser_backend
    build: ../file-browser-backend
    image: file-browser-backend:latest
    restart: always
    environment:
      NODE_ENV: "production"
      STORAGE_ACCESS_KEY: "AKIA3PCPNILJKLDENWGZ"
      STORAGE_SECRET_KEY: "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"
      STORAGE_S3: "true"
      STORAGE_BUCKET: "wi-thanh-inventory"
      STORAGE_MAXSIZE_TEXT: "100"
    ports:
      - "3001:3001"
    user: "${UID_GID}"
    expose:
      - "3001"
    networks:
      - i2g
    volumes:
      - /var/lib/docker-local/file-browser:/tmp/file-browser
  wi_backend:
    container_name: wi_backend
    image: wi-backend:latest
    build: ../wi-backend
    restart: always
    environment:
      NODE_ENV: "production"
      BACKEND_DBNAME: "wi_backend"
      BACKEND_DBUSER: "thanh"
      BACKEND_DBPASSWORD: "qwertyuiop"
      BACKEND_DBHOST: wi_mysql
      BACKEND_DBDIALECT: "mysql"
      BACKEND_DBPORT: "3306"
      BACKEND_DBSTORAGE: "/tmp/wi_backend.sqlite"
      BACKEND_PORT: "3000"
      BACKEND_REDIS_HOST: wi_redis
      BACKEND_REDIS_PORT: "6379"
      BACKEND_USER_UPLOAD_PATH: "/opt/uploads"
      BACKEND_AUTH_SERVICE: "http://wi_auth:2999"
      BACKEND_INV_SERVICE: "http://wi_online_inventory:80"
      BACKEND_CSV_SERVICE: "http://csv_transformer:8000"
      LOGGING_SERVICE: "http://logger.dev.i2g.cloud"
    ports:
      - "3000:3000"
    expose:
      - "3000"
    networks:
      - i2g
    volumes:
      - /var/lib/docker-local/curve-data:/opt/data
      - /var/lib/docker-local/wi-images:/opt/wi-backend/wi-images
      - /var/lib/docker-local/exports:/opt/wi-backend/server/export/exported-files
      - /var/lib/docker-local/wi-logs:/tmp/wiLog
      - /var/lib/docker-local/uploads:/opt/uploads
  wi_angular:
    container_name: wi_angular
    image: wi-angular:latest
    build: ../wi-angular
    restart: always
    environment:
      NODE_ENV: "local"
    ports:
      - "80:80"
    networks:
      - i2g
  csv_transformer:
    container_name: csv_transformer
    image: csv-transformer:latest
    build: ../csv-transformer
    restart: always
    ports:
      - "3003:8000"
    networks:
      - i2g
networks:
  i2g:
    driver: bridge
